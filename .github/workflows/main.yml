            - name: Setup Node.js environment
  uses: actions/setup-node@v4.0.3
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
          

name: main

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 20
      - run: yarn install --frozen-lockfile

      - run: npm run type
      - run: npm run lint
      - run: npm run test --ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: update action.yml to use image from local Dockerfile
        run: |
          sed -i "s/image: .*/image: Dockerfile/" action.yml

      - name: generate-snake-game-from-github-contribution-grid
        id: generate-snake
        uses: ./
        with:
          github_user_name: Theorafael/Theorafael
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
            dist/github-contribution-grid-snake.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9

      - name: ensure the generated file exists
        run: |
          ls dist
          test -f dist/github-contribution-grid-snake.svg
          test -f dist/github-contribution-grid-snake-dark.svg
          test -f dist/github-contribution-grid-snake.gif

      - uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-action-svg-only:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 20
      - run: yarn install --frozen-lockfile

      - name: build svg-only action
        run: |
          npm run build:action
          rm -r svg-only/dist
          mv packages/action/dist svg-only/dist

      - name: generate-snake-game-from-github-contribution-grid
        id: generate-snake
        uses: ./svg-only
        with:
          github_user_name: Theorafael/Theorafael
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark

      - name: ensure the generated file exists
        run: |
          ls dist
          test -f dist/github-contribution-grid-snake.svg
          test -f dist/github-contribution-grid-snake-dark.svg

      - uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          target_branch: output-svg-only
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-ghpages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 20
      - run: yarn install --frozen-lockfile

      - run: npm run build:demo
        env:
          GITHUB_USER_CONTRIBUTION_API_ENDPOINT: https://snk-one.vercel.app/api/github-user-contribution/

      - uses: crazy-max/ghaction-github-pages@v3.1.0
        if: success() && github.ref == 'refs/heads/main'
        with:
          target_branch: gh-pages
          build_dir: packages/demo/dist
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN_GH_PAGES }}
